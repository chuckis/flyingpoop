window.onload = function() {
    const canvas = document.getElementById("poopCanvas");
    const ctx = canvas.getContext("2d");

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —Ö–æ–ª—Å—Ç–∞ —Ä–∞–≤–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º –æ–∫–Ω–∞
    function resizeCanvas() {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
    }
    
    window.addEventListener('resize', resizeCanvas);
    resizeCanvas(); // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞

    let gameOver = false;

    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–∞
    let fan = {
        size: Math.min(canvas.width, canvas.height) * 0.1, // –†–∞–∑–º–µ—Ä –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–∞ 10% –æ—Ç –º–µ–Ω—å—à–µ–π —Å—Ç–æ—Ä–æ–Ω—ã —ç–∫—Ä–∞–Ω–∞
        rotation: 0, // –ù–∞—á–∞–ª—å–Ω—ã–π —É–≥–æ–ª –≤—Ä–∞—â–µ–Ω–∏—è
        speed: 0.05 // –°–∫–æ—Ä–æ—Å—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è
    };

    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏—Ü–µ–ª–∞
    let crosshair = {
        x: 0,
        y: 0,
        size: Math.min(canvas.width, canvas.height) * 0.04 // –†–∞–∑–º–µ—Ä –ø—Ä–∏—Ü–µ–ª–∞ 4% –æ—Ç –º–µ–Ω—å—à–µ–π —Å—Ç–æ—Ä–æ–Ω—ã —ç–∫—Ä–∞–Ω–∞
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
    function restartGame() {
        gameOver = false;
        poops = []; // –û—á–∏—Å—Ç–∏—Ç—å –º–∞—Å—Å–∏–≤ –∫–∞–∫–∞—à–µ–∫
        restartButton.style.display = 'none'; // –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É
        gameLoop(); // –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ü–∏–∫–ª –∏–≥—Ä—ã —Å–Ω–æ–≤–∞
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "START AGAIN" –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∏–≥—Ä—ã
    function showGameOverScreen() {
        // –†–∏—Å—É–µ–º GAME OVER
        ctx.fillStyle = '#8B4513'; // –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π —Ñ–æ–Ω
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        ctx.fillStyle = 'black';
        ctx.font = `bold ${Math.min(canvas.width, canvas.height) * 0.1}px Arial`;
        ctx.textAlign = 'center';
        ctx.fillText('GAME OVER!', canvas.width / 2, canvas.height / 2);

        // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
        restartButton.style.display = 'block';
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É "START AGAIN"
    restartButton.addEventListener('click', restartGame);

    // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞–∫–∞—à–µ–∫
    let poops = [];

    function spawnPoop() {
        // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∫–∞–∫–∞—à–∫—É –≤ —Å–ª—É—á–∞–π–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–∞—Ö —Ö–æ–ª—Å—Ç–∞
        let poop = {
            x: Math.random() * canvas.width,
            y: Math.random() * canvas.height,
            size: Math.min(canvas.width, canvas.height) * 0.04, // –†–∞–∑–º–µ—Ä –∫–∞–∫–∞—à–∫–∏ 4% –æ—Ç –º–µ–Ω—å—à–µ–π —Å—Ç–æ—Ä–æ–Ω—ã —ç–∫—Ä–∞–Ω–∞
            emoji: 'üí©', // –≠–º–æ–¥–∑–∏ –∫–∞–∫–∞—à–∫–∏
            speed: 1 + Math.random() * 2, // –°–ª—É—á–∞–π–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
            alive: true // –§–ª–∞–≥ –∂–∏–∑–Ω–∏ –∫–∞–∫–∞—à–∫–∏
        };
        
        // –î–æ–±–∞–≤–ª—è–µ–º –µ—ë –≤ –º–∞—Å—Å–∏–≤ –∫–∞–∫–∞—à–µ–∫
        poops.push(poop);
    }

    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–µ –∫–∞–∫–∞—à–∫–∏ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
    setInterval(spawnPoop, 2000);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏ –∏ —Ç–∞—á-—Å–æ–±—ã—Ç–∏–π –¥–ª—è –ø—Ä–∏—Ü–µ–ª–∞
    function updateCrosshair(x, y) {
        crosshair.x = x;
        crosshair.y = y;
    }

    canvas.addEventListener('mousemove', function(event) {
        const rect = canvas.getBoundingClientRect();
        updateCrosshair(event.clientX - rect.left, event.clientY - rect.top);
    });

    canvas.addEventListener('touchmove', function(event) {
        const touch = event.touches[0];
        const rect = canvas.getBoundingClientRect();
        updateCrosshair(touch.clientX - rect.left, touch.clientY - rect.top);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –º—ã—à–∏ –∏ —Ç–∞—á-—Å–æ–±—ã—Ç–∏–π –¥–ª—è —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –∫–∞–∫–∞—à–∫–∏
    function handleClickOrTouch() {
        poops.forEach((poop) => {
            if (poop.alive) {
                let dx = crosshair.x - poop.x;
                let dy = crosshair.y - poop.y;
                let distance = Math.sqrt(dx * dx + dy * dy);

                // –ï—Å–ª–∏ –ø—Ä–∏—Ü–µ–ª –ø–æ–ø–∞–ª –Ω–∞ –∫–∞–∫–∞—à–∫—É, –æ–Ω–∞ "—É–Ω–∏—á—Ç–æ–∂–∞–µ—Ç—Å—è"
                if (distance < 60) {
                    poop.alive = false;
                }
            }
        });
    }

    canvas.addEventListener('click', handleClickOrTouch);

    canvas.addEventListener('touchstart', function(event) {
        handleClickOrTouch();
        event.preventDefault(); // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ —Å–∫—Ä–æ–ª–ª
    });

    function drawPoop(poop) {
        if (poop.alive) {
            ctx.font = `${poop.size}px Arial`; // –†–∞–∑–º–µ—Ä –∏ —à—Ä–∏—Ñ—Ç –¥–ª—è —ç–º–æ–¥–∑–∏
            ctx.textAlign = 'center';
            ctx.textBaseline = 'middle';
            ctx.fillText(poop.emoji, poop.x, poop.y);
        }
    }

    function drawFan() {
        ctx.save();
    
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–µ–Ω—Ç—Ä –≤—Ä–∞—â–µ–Ω–∏—è –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–∞
        ctx.translate(canvas.width / 2, canvas.height / 2);
    
        // –í—Ä–∞—â–∞–µ–º –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä
        ctx.rotate(fan.rotation);
    
        // –†–∏—Å—É–µ–º –ª–æ–ø–∞—Å—Ç–∏ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–∞
        ctx.fillStyle = '#999';
        for (let i = 0; i < 3; i++) { // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–ø–∞—Å—Ç–µ–π - 3
            ctx.beginPath();
            // –≠–ª–ª–∏–ø—Å: x, y - —Ü–µ–Ω—Ç—Ä, —Ä–∞–¥–∏—É—Å—ã –ø–æ x –∏ y, —É–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞, –Ω–∞—á–∞–ª—å–Ω—ã–π –∏ –∫–æ–Ω–µ—á–Ω—ã–π —É–≥–æ–ª
            ctx.ellipse(0, -fan.size / 2, fan.size / 8, fan.size, 0, 0, 2 * Math.PI);
            ctx.fill();
            // –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–∞–∂–¥—É—é –ª–æ–ø–∞—Å—Ç—å –Ω–∞ 120 –≥—Ä–∞–¥—É—Å–æ–≤ (2 * PI / 3)
            ctx.rotate((2 * Math.PI) / 3);
        }
    
        ctx.restore();
    }
    

    function drawCrosshair() {
        // –†–∏—Å—É–µ–º –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–∏–µ –ø—Ä–∏—Ü–µ–ª–∞
        ctx.strokeStyle = 'red';
        ctx.lineWidth = 2;

        // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è
        ctx.beginPath();
        ctx.moveTo(crosshair.x - crosshair.size / 2, crosshair.y);
        ctx.lineTo(crosshair.x + crosshair.size / 2, crosshair.y);
        ctx.stroke();

        // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è
        ctx.beginPath();
        ctx.moveTo(crosshair.x, crosshair.y - crosshair.size / 2);
        ctx.lineTo(crosshair.x, crosshair.y + crosshair.size / 2);
        ctx.stroke();
    }

    function checkGameOver(poop) {
        let dx = poop.x - canvas.width / 2;
        let dy = poop.y - canvas.height / 2;
        let distance = Math.sqrt(dx * dx + dy * dy);

        // –ï—Å–ª–∏ –∫–∞–∫–∞—à–∫–∞ –¥–æ–ª–µ—Ç–µ–ª–∞ –¥–æ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–∞
        if (distance < fan.size && poop.alive) {
            gameOver = true;
        }
    }

    function movePoops() {
        poops.forEach((poop) => {
            if (poop.alive) {
                let dx = canvas.width / 2 - poop.x;
                let dy = canvas.height / 2 - poop.y;
                let distance = Math.sqrt(dx * dx + dy * dy);

                // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤–µ–∫—Ç–æ—Ä –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –∫–∞–∫–∞—à–∫—É
                poop.x += (dx / distance) * poop.speed;
                poop.y += (dy / distance) * poop.speed;

                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Å –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–æ–º
                checkGameOver(poop);
            }
        });
    }

    function drawGameOver() {
        ctx.fillStyle = 'black';
        ctx.font = `bold ${Math.min(canvas.width, canvas.height) * 0.1}px Arial`;
        ctx.textAlign = 'center';
        ctx.fillText('GAME OVER!', canvas.width / 2, canvas.height / 2);
    }

    function gameLoop() {
        if (!gameOver) {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            movePoops();
            fan.rotation += fan.speed;
            drawFan();
            poops.forEach(drawPoop);
            drawCrosshair();
            requestAnimationFrame(gameLoop);
        } else {
            showGameOverScreen(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º GAME OVER –∏ –∫–Ω–æ–ø–∫—É
        }
    
    }

    gameLoop();
};
